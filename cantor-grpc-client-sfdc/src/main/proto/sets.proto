syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.salesforce.cantor.grpc.sets";
option java_outer_classname = "Sets";
option objc_class_prefix = "SetsProtos";

package com.salesforce.cantor.grpc.sets;

message VoidResponse {}

message NamespacesRequest {}

message NamespacesResponse {
    repeated string namespaces = 1;
}

message CreateRequest {
    string namespace = 1;
}

message DropRequest {
    string namespace = 1;
}

message GetRequest {
    string namespace = 1;
    string set = 2;
    int64 min = 3;
    int64 max = 4;
    int32 start = 5;
    int32 count = 6;
    bool ascending = 7;
}

message UnionRequest {
    string namespace = 1;
    repeated string sets = 2;
    int64 min = 3;
    int64 max = 4;
    int32 start = 5;
    int32 count = 6;
    bool ascending = 7;
}

message IntersectRequest {
    string namespace = 1;
    repeated string sets = 2;
    int64 min = 3;
    int64 max = 4;
    int32 start = 5;
    int32 count = 6;
    bool ascending = 7;
}

message PopRequest {
    string namespace = 1;
    string set = 2;
    int64 min = 3;
    int64 max = 4;
    int32 start = 5;
    int32 count = 6;
    bool ascending = 7;
}

message GetResponse {
    map<string, int64> entries = 1;
}

message UnionResponse {
    map<string, int64> entries = 1;
}

message IntersectResponse {
    map<string, int64> entries = 1;
}

message PopResponse {
    map<string, int64> entries = 1;
}

message AddRequest {
    string namespace = 1;
    string set = 2;
    string entry = 3;
    int64 weight = 4;
}

message AddBatchRequest {
    string namespace = 1;
    string set = 2;
    map<string, int64> entries = 3;
}

message DeleteRequest {
    string namespace = 1;
}

message DeleteBetweenRequest {
    string namespace = 1;
    string set = 2;
    int64 min = 3;
    int64 max = 4;
}

message DeleteEntryRequest {
    string namespace = 1;
    string set = 2;
    string entry = 3;
}

message DeleteEntryResponse {
    bool deleted = 1;
}

message DeleteBatchRequest {
    string namespace = 1;
    string set = 2;
    repeated string entries = 3;
}

message SetsRequest {
    string namespace = 1;
}

message SetsResponse {
    repeated string sets = 1;
}

message KeysRequest {
    string namespace = 1;
    string set = 2;
    int64 min = 3;
    int64 max = 4;
    int32 start = 5;
    int32 count = 6;
    bool ascending = 7;
}

message KeysResponse {
    repeated string keys = 1;
}

message SizeRequest {
    string namespace = 1;
    string set = 2;
}

message SizeResponse {
    int32 size = 1;
}

message WeightRequest {
    string namespace = 1;
    string set = 2;
    string entry = 3;
}

message WeightResponse {
    int64 weight = 1;
    bool found = 2;
}

message TimestampRequest {
    string namespace = 1;
    string set = 2;
    string entry = 3;
}

message TimestampResponse {
    int64 timestamp = 1;
}

message IncRequest {
    string namespace = 1;
    string set = 2;
    string entry = 3;
    int64 count = 4;
}

message IncResponse {
    int64 result = 1;
}

service SetsService {
    rpc namespaces (NamespacesRequest) returns (NamespacesResponse) {}
    rpc create (CreateRequest) returns (VoidResponse) {}
    rpc drop (DropRequest) returns (VoidResponse) {}
    rpc get (GetRequest) returns (GetResponse) {}
    rpc union (UnionRequest) returns (UnionResponse) {}
    rpc intersect (IntersectRequest) returns (IntersectResponse) {}
    rpc pop (PopRequest) returns (PopResponse) {}
    rpc add (AddRequest) returns (VoidResponse) {}
    rpc addBatch (AddBatchRequest) returns (VoidResponse) {}
    rpc delete (DeleteRequest) returns (VoidResponse) {}
    rpc deleteBetween (DeleteBetweenRequest) returns (VoidResponse) {}
    rpc deleteEntry (DeleteEntryRequest) returns (DeleteEntryResponse) {}
    rpc deleteBatch (DeleteBatchRequest) returns (VoidResponse) {}
    rpc keys (KeysRequest) returns (KeysResponse) {}
    rpc sets (SetsRequest) returns (SetsResponse) {}
    rpc size (SizeRequest) returns (SizeResponse) {}
    rpc weight (WeightRequest) returns (WeightResponse) {}
    rpc timestamp (TimestampRequest) returns (TimestampResponse) {}
    rpc inc (IncRequest) returns (IncResponse) {}
}

